package basic;

import java.util.List;
import java.util.ArrayList;

import com.ftn.sbnz.model.models.Restaurant;
import com.ftn.sbnz.service.dtos.RestaurantFilterDTO;

global List<Restaurant> recommendations;

rule "Recommend restaurants based on user's location"
when 
    $filter: RestaurantFilterDTO(location != null, $location : location)
    $restaurant: Restaurant(location.contains($location))
then
    recommendations.add($restaurant);
    insert($restaurant);
end

rule "Recommend restaurants with vegetarian options"
when 
    $filter: RestaurantFilterDTO(isVegetarianFriendly != null)
    $restaurant: Restaurant(isVegetarianFriendly == true)
then
    recommendations.add($restaurant);
    insert($restaurant);
end

rule "Recommend restaurants allowing smoking"
when 
    $filter: RestaurantFilterDTO(isSmokerFriendly != null)
    $restaurant: Restaurant(isSmokerFriendly == true)
then
    recommendations.add($restaurant);
    insert($restaurant);
end


rule "Recommend restaurants based on rating"
when 
    $filter: RestaurantFilterDTO(minAvgRating != null, $minAvgRating : minAvgRating)
    $restaurant: Restaurant(minAvgRating > $minAvgRating)
then
    recommendations.add($restaurant);
    insert($restaurant);
end

rule "Recommend restaurants based on cuisine type"
when 
    $filter: RestaurantFilterDTO(cuisineType != null, $cuisineType : cuisineType)
    $restaurant: Restaurant(cuisineType == $cuisineType)
then
    recommendations.add($restaurant);
    insert($restaurant);
end

rule "Recommend restaurants based on price range"
when
    $filter: RestaurantFilterDTO(minPrice != null, $minPrice : minPrice, maxPrice != null, $maxPrice : maxPrice)
    $restaurant: Restaurant(price >= $minPrice, price <= $maxPrice)
then
    recommendations.add($restaurant);
    insert($restaurant);
end