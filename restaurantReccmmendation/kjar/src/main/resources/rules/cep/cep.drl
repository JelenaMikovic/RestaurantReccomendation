package cep;

import java.util.ArrayList;
import java.util.List;

import com.ftn.sbnz.model.models.Restaurant;
import com.ftn.sbnz.model.models.User;
import com.ftn.sbnz.model.models.Review;
import com.ftn.sbnz.model.models.CuisineType;

global List<Restaurant> allRestaurants;
global List<Restaurant> recommendations;

declare Review
    @role(event)
end

rule "Recommend restaurants based on recent visits"
    when
        $user: User ()
        $reviews : List() from collect(
            Review(this.user == $user) over window:time(7d)
        )
        Number(intValue >= 2) from accumulate(
            Review(this.user == $user) over window:time(7d), count()
        )
       $preferredCuisine : List() from accumulate(
            $review : Review(this.user == $user) over window:time(7d),
            init(List<CuisineType> cuisineTypes = new ArrayList();),
            action(cuisineTypes.add($review.getRestaurant().getCuisineType());),
            result(cuisineTypes)
        )
        $recommendedRestaurants : List() from collect(
            Restaurant(cuisineType memberOf $preferredCuisine) from allRestaurants
        )
    then
        recommendations.add($recommendedRestaurants);
        insert($recommendedRestaurants);
end
